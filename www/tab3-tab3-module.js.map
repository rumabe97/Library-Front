{"version":3,"sources":["./src/app/tab1/books/infrastructure/resolver/createUpdateBookResolverService.ts","./src/app/editorial/application/searchEditorial.ts","./src/app/tab3/tab3.page.ts","./src/app/tab3/tab3-routing.module.ts","./src/app/editorial/infrastructure/AbstractEditorialService.ts","./src/app/location/infrastructure/AbstractLocationService.ts","./src/app/location/infrastructure/LocationService.ts","./src/app/tab3/tab3.page.html","./src/app/location/application/searchLocation.ts","./src/app/tab3/tab3.module.ts","./src/app/tab1/books/application/getExternalBook.ts","./src/app/tab3/tab3.page.scss","./src/app/editorial/infrastructure/EditorialService.ts"],"names":[],"mappings":"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","file":"tab3-tab3-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { forkJoin, Observable, of } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { searchAuthor } from \"src/app/author/application/searchAuthor\";\nimport { AuthorService } from \"src/app/author/infrastructure/authorService\";\nimport { searchEditorial } from \"src/app/editorial/application/searchEditorial\";\nimport { EditorialService } from \"src/app/editorial/infrastructure/EditorialService\";\nimport { searchLocation } from \"src/app/location/application/searchLocation\";\nimport { LocationService } from \"src/app/location/infrastructure/LocationService\";\nimport { getBook } from \"../../application/getBook\";\nimport { getexternalBook } from \"../../application/getExternalBook\";\nimport { getExtraExternalBook } from \"../../application/getExtraExternalBook\";\nimport { searchBook } from \"../../application/searchBook\";\nimport { BookService } from \"../services/BookService\";\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class createUpdateBookResolverService implements Resolve<any> {\n  \n    constructor(\n        private _service: BookService,\n        private _editorialService:EditorialService,\n        private _authorService:AuthorService,\n        private _locationService:LocationService\n    ) {\n    }\n  \n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n      const $editorial = searchEditorial({},this._editorialService);\n      const $author = searchAuthor({},this._authorService);\n      const $location = searchLocation({},this._locationService);\n      const $book = searchBook({id:route.queryParams['id']},this._service);\n      const $bookIsbn = searchBook({ISBN:route.queryParams['id']},this._service);\n      const $externalBook = getexternalBook(route.queryParams['id'],this._service)\n      \n      return forkJoin($editorial, $author, $location, $book, $externalBook,$bookIsbn).pipe(\n          map(response => ({\n              data:{\n                editorial:response[0],\n                author:response[1],\n                location:response[2],\n                book:response[3],\n                bookIsbn:response[5],\n                externalBook:response[4]\n              }\n          })),catchError(err => {\n            return of({\n              data: null,\n              error: err,\n              message: 'Error on book  resolver, data couldn\\'t be fetched'\n            });\n          })\n      )\n  }\n}","import { EditorialService } from \"../infrastructure/EditorialService\";\n\nexport function searchEditorial(query: any, service: EditorialService){\n    return service.search(query);\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n\n  constructor() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateUpdateBookComponent } from '../tab1/books/infrastructure/ngComponents/create-update-book/create-update-book.component';\nimport { createUpdateBookResolverService } from '../tab1/books/infrastructure/resolver/createUpdateBookResolverService';\nimport { Tab3Page } from './tab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateUpdateBookComponent,\n    resolve: {response: createUpdateBookResolverService}\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab3PageRoutingModule {}\n","import { Observable } from \"rxjs\";\nimport { IList } from \"../../user/domain/IList\";\nimport { IEditorial } from \"../domain/IEditorial\";\n\nexport abstract class AbstractEditorialService {\n\n    abstract get(id: string): Observable<IEditorial>;\n\n    abstract update(user: IEditorial): Observable<IEditorial>;\n\n    abstract createEditorial(user: IEditorial): Observable<IEditorial>;\n\n    abstract search(params: any): Observable<IList<IEditorial>>;\n}","import { Observable } from \"rxjs\";\nimport { IList } from \"../../user/domain/IList\";\nimport { ILocation } from \"../domain/ILocation\";\n\nexport abstract class AbstractLocationService {\n\n    abstract get(id: string): Observable<ILocation>;\n\n    abstract update(location: ILocation): Observable<ILocation>;\n\n    abstract createLocation(location: ILocation): Observable<ILocation>;\n\n    abstract search(params: any): Observable<IList<ILocation>>;\n}","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IList } from \"../../user/domain/IList\";\nimport { ILocation } from \"../domain/ILocation\";\nimport { AbstractLocationService } from \"./AbstractLocationService\";\n\n@Injectable({\n    providedIn: 'any',\n})\nexport class LocationService extends AbstractLocationService {\n\n    private BASE_URL: string = 'http://192.168.43.68:8080/';\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    get(id: string): Observable<ILocation> {\n        return this.http\n            .get<ILocation>(`${this.BASE_URL}location/${id}`);\n    }\n\n    update(location: ILocation): Observable<ILocation> {\n        return this.http\n        .put<ILocation>(`${this.BASE_URL}location/${location.id}`, location);\n    }\n\n    createLocation(location: ILocation): Observable<ILocation> {\n        return this.http\n            .post<ILocation>(`${this.BASE_URL}location/create`, location);\n    }\n\n    search(params: any): Observable<IList<ILocation>> {\n        return this.http\n            .get<IList<ILocation>>(`${this.BASE_URL}location/search`, {params: new HttpParams({fromObject: this._clean(params)})});\n    }\n\n    private _clean(object): any { \n        const cleaned = {}; \n        const keys = Object.keys(object); \n        keys.forEach(key => { \n            if (object[key]) { cleaned[key] = object[key]; } \n        }); \n        return cleaned; \n    }\n}","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Tab 3\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Tab 3</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <app-explore-container name=\\\"Tab 3 page\\\"></app-explore-container>\\n</ion-content>\\n\";","import { LocationService } from \"../infrastructure/LocationService\";\n\nexport function searchLocation(query: any, service: LocationService){\n    return service.search(query);\n}","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\nimport { Tab3PageRoutingModule } from './tab3-routing.module';\nimport { CreateUpdateBookComponent } from '../tab1/books/infrastructure/ngComponents/create-update-book/create-update-book.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\n    Tab3PageRoutingModule,\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","import { BookService } from \"../infrastructure/services/BookService\";\n\nexport function getexternalBook(isbn: string, service: BookService){\n    return service.getExternalBook(isbn);\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWIzLnBhZ2Uuc2NzcyJ9 */\";","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IList } from \"../../user/domain/IList\";\nimport { IEditorial } from \"../domain/IEditorial\";\nimport { AbstractEditorialService } from \"./AbstractEditorialService\";\n\n@Injectable({\n    providedIn: 'any',\n})\nexport class EditorialService extends AbstractEditorialService {\n    \n    private BASE_URL: string = 'http://192.168.43.68:8080/';\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    get(id: string): Observable<IEditorial> {\n        return this.http\n            .get<IEditorial>(`${this.BASE_URL}editorial/${id}`);\n    }\n\n    update(editorial: IEditorial): Observable<IEditorial> {\n        return this.http\n        .put<IEditorial>(`${this.BASE_URL}editorial/${editorial.id}`, editorial);\n    }\n\n    createEditorial(editorial: IEditorial): Observable<IEditorial> {\n        return this.http\n            .post<IEditorial>(`${this.BASE_URL}editorial/create`, editorial);\n    }\n\n    search(params: any): Observable<IList<IEditorial>> {\n        return this.http\n            .get<IList<IEditorial>>(`${this.BASE_URL}editorial/search`, {params: new HttpParams({fromObject: this._clean(params)})});\n    }\n\n    private _clean(object): any { \n        const cleaned = {}; \n        const keys = Object.keys(object); \n        keys.forEach(key => { \n            if (object[key]) { cleaned[key] = object[key]; } \n        }); \n        return cleaned; \n    }\n}"],"sourceRoot":"webpack:///"}